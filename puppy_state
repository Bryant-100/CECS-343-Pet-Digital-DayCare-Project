from abc import ABC, abstractmethod

class PuppyState(ABC):
    @abstractmethod
    def feed(self, puppy):
        """Return the puppy's feed state to being fed.
    
        Parameters
        ----------
        puppy: object
            The instance of the puppy whose state is being managed.
        Raises
        -------
        NotImplementedError
        """ 
        pass

    @abstractmethod
    def play(self, puppy):
        """
        Define the puppy's response to being played with.

        Parameters
        ----------
        puppy : object
            The instance of the puppy whose state is being managed.
        
        Raises
        ------
        NotImplementedError
            If the method is not implemented in a subclass.
        """
        pass
